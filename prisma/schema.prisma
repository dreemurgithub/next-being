// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/app/generated/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String?
  password      String
  avatarId      String?  @unique
  avatar        ImageBlob? @relation("UserAvatar", fields: [avatarId], references: [id], onDelete: SetNull)
  posts         Post[]
  comments      Comment[]
  imageBlobs    ImageBlob[] @relation("UserImages")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  comments  Comment[]
  images    ImageBlob[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id       String   @id @default(uuid())
  text     String
  authorId String
  postId   String
  author   User    @relation(fields: [authorId], references: [id])
  post     Post    @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ImageBlob {
  id          String   @id @default(uuid())
  filename    String
  blob        Bytes
  mimeType    String
  size        Int
  folder      String
  uploadedBy  String
  uploader    User     @relation("UserImages", fields: [uploadedBy], references: [id])
  userAvatar  User?    @relation("UserAvatar")
  postId      String?
  post        Post?    @relation(fields: [postId], references: [id], onDelete: SetNull)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
